---
#---------TLS certs ----------------
- name: create kibana certs folder
  file:
    path: "{{ kibana_install_dir }}/config/certs"
    state: directory
    owner: "{{ username }}"
    group: "{{ usergroup }}"
  become: yes

- name: copy kibana ca cert
  copy:
    src: "certs/ca.pem"
    dest: "{{ kibana_conf_dir }}/certs/ca.pem"
  register: copy_es_cert

- name: copy kibana key
  copy:
    src: "certs/{{inventory_hostname}}.key"
    dest: "{{ kibana_conf_dir }}/certs/{{inventory_hostname}}.key"
  register: copy_es_cert

- name: copy kibana cert
  copy:
    src: "certs/{{inventory_hostname}}.pem"
    dest: "{{ kibana_conf_dir }}/certs/{{inventory_hostname}}.pem"
  register: copy_es_cert


#--------- bootstrap user ----------------
- name: check if kibana keystore already exists
  stat:
    path: "{{ kibana_install_dir }}/data/kibana.keystore"
  register: kibana_keystore

- debug:
    msg: "{{ kibana_install_dir }}/data/kibana.keystore"

- debug:
    msg: "{{kibana_keystore}}"

- name: create the keystore if it doesn't exist yet
  command: >
    {{kibana_install_dir}}/bin/kibana-keystore create
#  args:
#    creates: "{{ kibana_data_dir }}/kibana.keystore"
#  environment:
#    PATH_DATA: "{{ kibana_data_dir }}"
  when: not kibana_keystore.stat.exists

- name: check if bootstrap password is set
  command: >
    {{kibana_install_dir}}/bin/kibana-keystore list
#  environment:
#    PATH_DATA: "{{ kibana_data_dir }}"
  register: list_keystore
  changed_when: False
  check_mode: no

- name: create Bootstrap password for elastic user
  shell: echo "{{kibana_admin_password}}" | {{kibana_install_dir}}/bin/kibana-keystore add -x 'bootstrap.password'
#  environment:
#    PATH_DATA: "{{ kibana_data_dir }}"
  when:
    - list_keystore is defined and 'bootstrap.password' not in list_keystore.stdout_lines
  no_log: true
