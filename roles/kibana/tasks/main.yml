- name: copy kibana
  copy:
    src: "files/{{kibana_repo_file}}"
    dest: "{{apps_dir}}/{{kibana_repo_file}}"
  register: copy_kibana

- name: create kibana directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
  with_items:
    - "{{ kibana_install_dir }}"
    - "{{ kibana_data_dir }}"
    - "{{ kibana_logs_dir }}"

- name: extract kibana
  unarchive:
    src: "{{ apps_dir }}/{{ kibana_repo_file }}"
    dest: "{{ kibana_install_dir }}/"
    remote_src: yes
    extra_opts:
      - --strip-components=1
  when: copy_kibana.changed

- name: copy kibana config
  template:
    src: "kibana.yml.j2"
    dest: "{{ kibana_install_dir }}/config/kibana.yml"
  register: copy_kibana_config

- name: copy kibana service script
  template:
    src: "kibana.service.j2"
    dest: /etc/systemd/system/kibana.service
    owner: root
    group: root
  become: yes
  register: copy_kibana_service_script

- name: restart kibana service
  systemd:
    daemon_reload: yes
    state: restarted
    name: kibana.service
    enabled: yes
  become: yes
  register: restart_kibana_service
  when: copy_kibana_config.changed or copy_kibana_service_script.changed or copy_kibana.changed

- name: "waiting for kibana to come up"
  uri:
    url: "http://{{ansible_host}}:{{kibana_port}}/"
    status_code: "200"
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
  when: restart_kibana_service.changed

- name: making sure kibana is started (in case that there is not any config change)
  systemd:
    state: started
    name: kibana.service
    enabled: yes
    daemon_reload: no
  become: yes
  register: kibana_is_started

- name: "waiting for kibana to come up"
  uri:
    url: "http://{{ansible_host}}:{{kibana_port}}/"
    status_code: "200"
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
  when: kibana_is_started.changed


#- name: Import Kibana dashboards
#  uri:
#    url: http://{{host_ip}}:{{kibana_port}}/api/kibana/dashboards/import?force=true
#    method: POST
#    headers:
#      kbn-xsrf: true
#      Content-Type: "application/json"
#    src: files/kibana-dashboards.json
#    remote_src: no
#    return_content: yes
#  run_once: true
#  delegate_to: localhost
#  register: result
#  failed_when: 'result.json.objects[0].error is defined' #fixme: only checks first entry?
