- name: Copy Elastic
  copy:
    src: "files/{{elastic_repo_file}}"
    dest: "{{bd_app_dir}}/{{elastic_repo_file}}"
  register: copyelastic

- name: Create Elastic directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ bd_user }}"
  with_items:
    - "{{ elastic_install_dir }}"
    - "{{ elastic_data_dir }}"
    - "{{ elastic_logs_dir }}"

- name: Extract Elastic
  unarchive:
    src: "{{ bd_app_dir }}/{{ elastic_repo_file }}"
    dest: "{{ elastic_install_dir }}/"
    remote_src: yes
    extra_opts:
    - --strip-components=1
  when: copyelastic.changed

- name: Copy Elastic config
  template:
    src: "elasticsearch.yml.j2"
    dest: "{{ elastic_install_dir }}/config/elasticsearch.yml"

- name: Copy Elastic start scripts
  template:
    src: "elastic-systemd.j2"
    dest: /etc/systemd/system/elasticsearch.service
    owner: root
    group: root
  become: yes

- name: set vm.max_map_count to 262144 in sysctl
  sysctl: 
    name: "{{ item.key }}"
    value: "{{ item.value }}"
  with_items:
  - { key: "vm.max_map_count", value: "262144" }
  become: yes

- name: Start Elastic service
  systemd:
    daemon_reload: yes
    state: restarted
    name: elasticsearch
  become: yes

- name: Wait for Elastic to startup
  wait_for: host={{host_ip}} port={{elastic_port}} delay=5 connect_timeout=1