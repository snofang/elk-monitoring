- name: copy filebeat
  copy:
    src: "files/{{filebeat_repo_file}}"
    dest: "{{apps_dir}}/{{filebeat_repo_file}}"
  register: copyfilebeat

- name: create filebeat directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
  with_items:
    - "{{ filebeat_install_dir }}"
    - "{{ filebeat_data_dir }}"
    - "{{ filebeat_logs_dir }}"

- name: extract filebeat
  unarchive:
    src: "{{ apps_dir }}/{{ filebeat_repo_file }}"
    dest: "{{ filebeat_install_dir }}/"
    remote_src: yes
    extra_opts:
    - --strip-components=1
  when: copyfilebeat.changed
  notify:
    - restart filebeat

- name: copy filebeat configs
  template:
    src: "{{item}}.j2"
    dest: "{{ filebeat_conf_dir }}/{{item}}"
  with_items:
    - "filebeat.yml"
  notify:
    - restart filebeat

- name: copy filebeat start scripts
  template:
    src: "filebeat.sysv2.j2"
    dest: /etc/init.d/filebeat
    owner: root
    group: root
    mode: 0755
  become: yes
  notify:
    - restart filebeat

- name: checking keystore existance
  stat:
    path: "{{filebeat_data_dir}}/filebeat.keystore"
  register: keystore_stat_result

- name: creating keystore
  shell:
    cmd: "./filebeat keystore create"
    chdir: "{{filebeat_install_dir}}"
  args:
    executable: /bin/bash
  when: not keystore_stat_result.stat.exists

- name: putting tls password in filebeat keystore
  shell:
    cmd: "./filebeat keystore add tls_password --stdin --force"
    stdin: "{{tls_password}}"
    chdir: "{{filebeat_install_dir}}"
  args:
    executable: /bin/bash
  register: keystore_tls_password_add
  notify:
    - restart filebeat

#- name: filebeat security configuration
#  include: filebeat_security.yml

- name: filebeat delete registry
  file:
    path: "{{filebeat_data_dir}}/registry"
    state: absent
  when: filebeat_delete_registry
  notify:
    - restart filebeat




