- name: copy logstash
  copy:
    src: "files/{{logstash_repo_file}}"
    dest: "{{apps_dir}}/{{logstash_repo_file}}"
  register: copylogstash

- name: create logstash directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
  with_items:
    - "{{ logstash_install_dir }}"
    - "{{ logstash_data_dir }}"
    - "{{ logstash_logs_dir }}"
    - "{{ logstash_patterns_dir }}"
    - "{{ logstash_pipeline_main_dir }}"

- name: extract logstash
  unarchive:
    src: "{{ apps_dir }}/{{ logstash_repo_file }}"
    dest: "{{ logstash_install_dir }}/"
    remote_src: yes
    extra_opts:
    - --strip-components=1
  when: copylogstash.changed

- name: config logstash - defaults
  template:
    src: "{{item}}.j2"
    dest: "{{ logstash_conf_dir }}/{{item}}"
  with_items:
    - "logstash.yml"
    - "pipelines.yml"
  notify:
    - restart logstash

- name: config logstash - default main pipeline
  template:
    src: "{{item}}.j2"
    dest: "{{ logstash_pipeline_main_dir }}/{{item}}"
  with_items:
    - "10-input.conf"
    - "20-filter.conf"
    - "30-output.conf"
  notify:
    - restart logstash

- name: copy logstash start scripts environment variables
  template:
    src: "logstash_ev.j2"
    dest: /etc/default/logstash
    owner: root
    group: root
    mode: 0755
  become: yes
  notify:
    - restart logstash

- name: copy logstash start scripts
  template:
    src: "logstash.sysv2.j2"
    dest: /etc/init.d/logstash
    owner: root
    group: root
    mode: 0755
  become: yes
  notify:
    - restart logstash

- name: logstash security configuration
  include: logstash_security.yml

- name: ensure logstash started
  become: yes
  service:
    name: logstash
    state: started
    enabled: yes